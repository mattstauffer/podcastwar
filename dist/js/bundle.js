!function e(i,o,n){function t(u,c){if(!o[u]){if(!i[u]){var s="function"==typeof require&&require;if(!c&&s)return s(u,!0);if(r)return r(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var a=o[u]={exports:{}};i[u][0].call(a.exports,function(e){var o=i[u][1][e];return t(o?o:e)},a,a.exports,e,i,o,n)}return o[u].exports}for(var r="function"==typeof require&&require,u=0;u<n.length;u++)t(n[u]);return t}({1:[function(){var e=function(){var e={},i=e.hasOwnProperty;return{subscribe:function(o,n){i.call(e,o)||(e[o]=[]);var t=e[o].push(n)-1;return{remove:function(){delete e[o][t]}}},publish:function(o,n){i.call(e,o)&&e[o].forEach(function(e){e(void 0!==n?n:{})})}}}(),o=function(){function o(e){this.num=e,this.id="cube-"+e,this.$el=$("#"+this.id),this.value=1;var i=this;if(this.$el.on("click",function(){i.choose()}),0===this.$el.length)throw"Die number "+e+" does not exist"}var n,t,r,u,c=5,s=!0,l=!1,a=!1,f=[],h=[],d=0,v=500,b=0,p={1:"show-front",2:"show-back",3:"show-right",4:"show-left",5:"show-top",6:"show-bottom"};o.prototype={removeFromLive:function(){var e=this;f=f.filter(function(i){return i.id!=e.id})},choose:function(){if(!this.isLive())return void T("Not live, no choos-y");if(a)return void S("You cannot choose a die until you roll again.");if(!l)return void S("You cannot choose a die until you have rolled.");if(this.value<d)return void S("You can't choose dice with a value lower than your match.");this.value>d&&(d=this.value);var i=this;sameValueDice=f.filter(function(e){return e.value==i.value});for(var o in sameValueDice)sameValueDice[o].moveToPool();e.publish("die.chosen",this)},moveToPool:function(){this.removeFromLive(),h.push(this),e.publish("die.movedToPool",this)},isLive:function(){var e=this,i=f.filter(function(i){return i.id==e.id});return i.length>0},roll:function(){var i=y();this.value=i,e.publish("die.rolled",this)}};var m=function(){e.subscribe("dice.rolled",function(){$(".cube-wrapper").removeClass("queued")}),e.subscribe("dice.rolled",function(){l=!0,a=!1}),e.subscribe("dice.rolled",function(){D.liveAllowsFutureChoosing()}),e.subscribe("die.chosen",function(){$("#quit-and-score").css("display","inline-block")}),e.subscribe("die.chosen",function(){a=!0,x.updateScore(),D.liveContainsDice()}),e.subscribe("die.movedToPool",function(e){e.$el.closest(".cube-wrapper").detach().appendTo(r)}),e.subscribe("die.rolled",function(e){e.$el[0].className="cube "+p[e.value]}),e.subscribe("score.changed",function(){u.text(b)}),e.subscribe("play.scoredOut",function(){S("You got "+b+" point(s) for your podcast of choice"),$("#screen").css("display","block")})},w=function(){for(i=1;i<=c;i++)f.push(new o(i));t=$("#live-container"),r=$("#match-container"),n=$("#roll-button"),$quitAndScoreButton=$("#quit-and-score"),u=$("#current-score"),n.on("click",function(){g()}),$quitAndScoreButton.on("click",function(){T("Quitting because quit and score button pressed."),x.quitAndScore()}),m()},g=function(){for(var i in f)f[i].roll();e.publish("dice.rolled")},y=function(){return Math.round(5*Math.random())+1},q=function(e){setTimeout(e,v)},D={liveAllowsFutureChoosing:function(){for(var e in f)if(f[e].value>=d)return;q(function(){S("Fail roll!"),x.failRoll()})},liveContainsDice:function(){0===f.length&&(T("Quitting because live length is 0"),quitAndScore())}},S=function(e){var i=$('<div class="alert">').text(e);$("#notifications").append(i),setTimeout(function(){i.slideUp()},3e3)},T=function(e){s&&console.log(e)},x={failRoll:function(){b=1,e.publish("score.changed"),e.publish("play.scoredOut")},updateScore:function(){var i=0;for(var o in h)i+=h[o].value;b=i,e.publish("score.changed")},quitAndScore:function(){this.updateScore(),e.publish("play.scoredOut")}};return{init:w}}();$(function(){o.init()})},{}]},{},[1]);